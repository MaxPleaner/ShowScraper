#!/usr/bin/env ruby

require 'optparse'
require "#{__dir__}/../scraper/scraper.rb"

opts = {}
OptionParser.new do |opt|
  opt.on('--limit LIMIT') { |val| opts[:limit] = val.to_i }
  opt.on('--skip-persist') { opts[:skip_persist] = true }
  opt.on('--rescue BOOL') { |val| ENV["RESCUE_SCRAPING_ERRORS"] = val }
  opt.on('--no-scrape') { ENV["ONLY_UPDATE_VENUES"] = "true" }
  opt.on('--sources SOURCES') do |val|
    opts[:sources] = val.split(",").map do |source|
      source.constantize
    rescue
      puts "ERROR: unknown source \"#{source}\""
      exit!
    end
  end
end.parse!

results, errors = Scraper.run(
  opts[:sources],
  events_limit: opts[:limit],
  persist_mode: opts[:skip_persist] ? nil : :static
)

puts "done\n"

warnings = []
Dir.glob("./debug/*.json").each do |file|
  name = File.basename(file).gsub(".json", "")
  num_events = JSON.parse(File.read(file)).length
  if num_events == 0
    warnings.push(name)
  end

  puts "#{name} - #{num_events}"
end

warnings.each do |source|
  puts "WARNING: #{source} produced 0 events!"
end

errors.each do |error|
  puts "ERROR: #{error[:source]} failed to scrape. Skipped."
end



